/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2016-09-04 06:58:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.StoreEditor.pages.trex;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class image_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n");
      out.write("<title>DaumÃ¬ÂÂÃ«ÂÂÃ­ÂÂ° - Ã¬ÂÂ´Ã«Â¯Â¸Ã¬Â§Â Ã¬Â²Â¨Ã«Â¶Â</title> \n");
      out.write("<script src=\"/StoreEditor/js/popup.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n");
      out.write("<link rel=\"stylesheet\" href=\"/StoreEditor/css/popup.css\" type=\"text/css\"  charset=\"utf-8\"/>\n");
      out.write("\n");
      out.write("<!-- Ã¬Â¿Â¼Ã«Â¦Â¬ Ã«Â§ÂÃ­ÂÂ¬ -->\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.11.0.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"http://malsup.github.io/jquery.form.js\"></script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("// <![CDATA[\n");
      out.write("\t$(function(){\n");
      out.write("        $(\"#saveBtn\").click(function(){\n");
      out.write("            $(\"#frm\").submit();\n");
      out.write("        })\n");
      out.write("        //ajax form submit\n");
      out.write("        $('#frm').ajaxForm({\n");
      out.write("            beforeSubmit: function (data,form,option) {\n");
      out.write("                //validationì²´í¬ \n");
      out.write("                //ë§ê¸°ìí´ìë return falseë¥¼ ì¡ìì£¼ë©´ë¨\n");
      out.write("                return true;\n");
      out.write("            },\n");
      out.write("            success: function(response,status){\n");
      out.write("                //ì±ê³µí ìë²ìì ë°ì ë°ì´í° ì²ë¦¬\n");
      out.write("                done(response);\n");
      out.write("            },\n");
      out.write("            error: function(){\n");
      out.write("                //ìë¬ë°ìì ìí codeíì´ì§\n");
      out.write("                alert(\"error!!\");\n");
      out.write("            }                               \n");
      out.write("        });\n");
      out.write("    })\n");
      out.write("    \n");
      out.write("\n");
      out.write("    function done(response) {\n");
      out.write("        if (typeof(execAttach) == 'undefined') { //Virtual Function\n");
      out.write("            return;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        var response_object = $.parseJSON( response );\n");
      out.write("        \n");
      out.write("/*       \tvar data = {\n");
      out.write("    \t\t\t'attachurl': data.fileurl + '/' + data.realname,\n");
      out.write("    \t\t\t'filemime': \"jpg\",\n");
      out.write("    \t\t\t'filename': data.filename,\n");
      out.write("    \t\t\t'imagealign' : \"L\"\n");
      out.write("    \t\t}; */\n");
      out.write("        \n");
      out.write("        execAttach(response_object);\n");
      out.write("/*         var response_object = new Array();\n");
      out.write("\n");
      out.write("\t\tfor (var i=0;i<response_object.length;i++){\n");
      out.write("\t\t\tresponse_object[i] = $.parseJSON( response );\n");
      out.write("\n");
      out.write("\t\t\texecAttach(response_object[i]); \n");
      out.write("\t\t} */\n");
      out.write("        closeWindow();\n");
      out.write("\t\t\t\t\treturn;\n");
      out.write("    }\n");
      out.write(" \t\t\n");
      out.write("\t\n");
      out.write("    function initUploader(){\n");
      out.write("        var _opener = PopupUtil.getOpener();\n");
      out.write("        if (!_opener) {\n");
      out.write("            alert('ìëª»ë ê²½ë¡ë¡ ì ê·¼íì¨ìµëë¤.');\n");
      out.write("            return;\n");
      out.write("        }\n");
      out.write("         \n");
      out.write("        var _attacher = getAttacher('image', _opener);\n");
      out.write("        registerAction(_attacher);\n");
      out.write("  \t\t  }\n");
      out.write("    \n");
      out.write("\n");
      out.write("// ]]>\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body onload=\"initUploader();\">\n");
      out.write("<div class=\"wrapper\">\n");
      out.write("\t<div class=\"header\">\n");
      out.write("\t\t<h1>Ã¬ÂÂ¬Ã¬Â§Â Ã¬Â²Â¨Ã«Â¶Â</h1>\n");
      out.write("\t</div>\t\n");
      out.write("\t<div class=\"body\">\n");
      out.write("\t\t<dl class=\"alert\">\n");
      out.write("\t\t    <dt>ì¬ì§ì²¨ë¶ íì¸ git, png, jpg, jpeg, tifë§ ìë¡ë ê°ë¥í©ëë¤.</dt>\n");
      out.write("\t\t    <dd>\n");
      out.write("\t\t    \t<form id=\"frm\" action=\"/uploadTemporaryImageFromEditor.do\" method=\"post\">\n");
      out.write("          <input id=\"image_file\"  type=\"file\" name=\"image_file\"/>\n");
      out.write("   \t\t\t\t\t<input type=\"text\" readonley=\"readonly\" id=\"image_name\"/>\n");
      out.write("      </form>\n");
      out.write("\t\t\t</dd>\n");
      out.write("\t\t</dl>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"footer\">\n");
      out.write("\t\t<p><a href=\"#\" onclick=\"closeWindow();\" title=\"Ã«ÂÂ«ÃªÂ¸Â°\" class=\"close\">Ã«ÂÂ«ÃªÂ¸Â°</a></p>\n");
      out.write("\t\t<ul>\n");
      out.write(" \t\t\t\t\t\t\t\t<li class=\"submit\"><a href=\"#\" id=\"saveBtn\" title=\"ë±ë¡\" class=\"btnlink\">ë±ë¡</a> </li>\n");
      out.write("            <li class=\"cancel\"><a href=\"#\" onclick=\"closeWindow();\" title=\"ì·¨ì\" class=\"btnlink\">ì·¨ì</a></li>\n");
      out.write("\t\t</ul>\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
